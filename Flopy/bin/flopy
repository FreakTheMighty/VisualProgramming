#!/usr/bin/env python

#Standard libraries
import sys
import math

#Third party libraries
from PyQt4.QtGui import QApplication
from PyQt4 import QtCore, QtGui
import networkx
import yaml

#Core libraries
import GraphScene.Graph as Graph
import Flow.TaskGraph as TaskGraph


if __name__ == "__main__":
    app = QApplication(sys.argv)
    main =  QtGui.QMainWindow()
    main.resize(400,400)

    view = QtGui.QGraphicsView()

    graph = TaskGraph.TaskGraph()
    graphscene= Graph.GraphScene(graph)
    a = graph.add_task(math.pow)
    b = graph.add_task(math.pow)
    c = graph.add_task(math.pow)
    graph.add_edge(a,b,0)
    graph.add_edge(c,b,1)
    graphscene.addGraph(graph)
    

    oploader = Graph.OpLoader(graphscene)
    oploader.setGeometry(0,0,200,30)
    opsmodel = Graph.OperatorsModel()
    completer = QtGui.QCompleter(opsmodel)
    completer.setCompletionMode(1)


    graphscene.setParent(view)
    view.setScene(graphscene)

    main.setCentralWidget(view)
    main.show()

    sys.exit(app.exec_())
