#!/usr/bin/env python

#Standard libraries
import sys
import math

#Third party libraries
from PyQt4.QtGui import QApplication
from PyQt4 import QtCore, QtGui
import networkx
import yaml

#Core libraries
import Flopy.GraphScene.Graph as Graph
import Flopy.GraphScene.SearchPath as SearchPath
import Flopy.Flow.TaskGraph as TaskGraph


class AddTask(TaskGraph.TaskNode):

    def __init__(self):
        TaskGraph.TaskNode.__init__(self)

    def argCount(self):
        return 2

    def func(self,a,b):
        return a + b

if __name__ == "__main__":
    app = QApplication(sys.argv)
    main =  QtGui.QMainWindow()
    main.resize(400,400)

    searchPathDialog =  SearchPath.SearchPathDialog()
    searchPathDialog.show()

    view = QtGui.QGraphicsView()

    graph = TaskGraph.TaskGraph()
    graphscene= Graph.GraphScene(graph)
    a = AddTask()
    b = AddTask()
    c = AddTask()

    graph.add_node(a)
    graph.add_node(b)
    graph.add_node(c)

    graph.add_edge(a,b,0)
    graph.add_edge(c,b,1)
    graphscene.addGraph(graph)


    graphscene.setParent(view)
    view.setScene(graphscene)
    
    main.setCentralWidget(view)
    main.show()

    sys.exit(app.exec_())
